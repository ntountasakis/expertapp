syntax = "proto3";

package call_transaction_package;

service CallTransaction
{
    rpc InitiateCall(stream ClientMessageContainer) returns (stream ServerMessageContainer) {}
}

message ClientCallInitiateRequest {
    string callerUid = 1;
    string calledUid = 2;
}

message ClientCallJoinRequest {
    string callTransactionId = 1;
    string joinerUid = 2;
}

message ClientCallTerminateRequest {
    string callTransactionId = 1;
    string uid = 2;
}

message ClientMessageContainer {
    oneof messageWrapper {
        ClientCallInitiateRequest callInitiateRequest = 1;
        ClientCallJoinRequest callJoinRequest = 2;
        ClientCallTerminateRequest callTerminateRequest = 3;
    }
}

message ServerCallJoinOrRequestResponse {
    bool success = 1;
    string errorMessage = 2;
    string callTransactionId = 3;
}

message ServerAgoraCredentials {
    string token = 1;
    string channelName = 2;
    uint32 uid = 3;
}

message ServerCallBeginPaymentInitiate {
    string clientSecret = 1;
    string customerId = 2;
    string ephemeralKey = 3;
}

message ServerCallBeginPaymentInitiateResolved {
}

message ServerCallTerminatePaymentInitiate {
    string clientSecret = 1;
    string customerId = 2;
    string ephemeralKey = 3;
}

message ServerCallTerminatePaymentInitiateResolved {
}

message ServerCounterpartyJoinedCall {
}

message ServerCounterpartyLeftCall {
}

message ServerFeeBreakdowns {
    float paymentProcessorPercentFee = 1;
    uint32 paymentProcessorCentsFlatFee = 2;
    float platformPercentFee = 3;
    uint32 earnedCentsStartCall = 4;
    uint32 earnedCentsPerMinute = 5;
}


message ServerMessageContainer {
    oneof messageWrapper {
        ServerCallJoinOrRequestResponse serverCallJoinOrRequestResponse = 1;
        ServerAgoraCredentials serverAgoraCredentials = 2;
        ServerCallBeginPaymentInitiate serverCallBeginPaymentInitiate = 3;
        ServerCallBeginPaymentInitiateResolved serverCallBeginPaymentInitiateResolved = 4;
        ServerCallTerminatePaymentInitiate serverCallTerminatePaymentInitiate = 5;
        ServerCallTerminatePaymentInitiateResolved serverCallTerminatePaymentInitiateResolved = 6;
        ServerCounterpartyLeftCall serverCounterpartyLeftCall = 7;
        ServerCounterpartyJoinedCall serverCounterpartyJoinedCall = 8;
        ServerFeeBreakdowns serverFeeBreakdowns = 9;
    }
}