syntax = "proto3";
package call_transaction_package;

service CallTransaction
{
    rpc InitiateCall(stream ClientMessageContainer) returns (stream ServerMessageContainer) {}
}

message ClientCallInitiateRequest {
    string callerUid = 1;
    string calledUid = 2;
    string version = 3;
}

message ClientCallJoinRequest {
    string callTransactionId = 1;
    string joinerUid = 2;
    string version = 3;
}

message ClientCallDisconnectRequest {
    string uid = 1;
}

message ClientNotifyRemoteJoinedCall {
    string clientUid = 1;
    string remoteUid = 2;
}

message ClientKeepAlivePing{
}

message ClientMessageContainer {
    oneof messageWrapper {
        ClientCallInitiateRequest callInitiateRequest = 1;
        ClientCallJoinRequest callJoinRequest = 2;
        ClientCallDisconnectRequest callDisconnectRequest = 3;
        ClientNotifyRemoteJoinedCall notifyRemoteJoinedCall = 4;
        ClientKeepAlivePing keepAlivePing = 5;
    }
}

message ServerCallJoinOrRequestResponse {
    bool success = 1;
    string errorMessage = 2;
    string callTransactionId = 3;
    uint32 secondsCallAuthorizedFor = 4;
}

message ServerAgoraCredentials {
    string token = 1;
    string channelName = 2;
    uint32 uid = 3;
}

message ServerCallBeginPaymentPreAuth {
    string clientSecret = 1;
    string customerId = 2;
    string ephemeralKey = 3;
    uint32 centsRequestedAuthorized = 4;
}

message ServerCallBeginPaymentPreAuthResolved {
    int64 joinCallTimeExpiryUtcMs = 1;
}

message ServerCounterpartyJoinedCall {
}

message ServerBothPartiesReadyForCall {
    int64 callStartUtcMs = 1;
}

message ServerFeeBreakdowns {
    float platformPercentFee = 1;
    uint32 earnedCentsStartCall = 4;
    uint32 earnedCentsPerMinute = 5;
}

message ServerCallSummary {
    uint32 lengthOfCallSec = 1;
    uint32 costOfCallCents = 2;
    uint32 platformFeeCents = 3;
    uint32 earnedTotalCents = 4;
}

message ServerKeepAlivePong{
}

message ServerMessageContainer {
    oneof messageWrapper {
        ServerCallJoinOrRequestResponse serverCallJoinOrRequestResponse = 1;
        ServerAgoraCredentials serverAgoraCredentials = 2;
        ServerCallBeginPaymentPreAuth serverCallBeginPaymentPreAuth = 3;
        ServerCallBeginPaymentPreAuthResolved serverCallBeginPaymentPreAuthResolved = 4;
        ServerCounterpartyJoinedCall serverCounterpartyJoinedCall = 6;
        ServerFeeBreakdowns serverFeeBreakdowns = 7;
        ServerCallSummary serverCallSummary = 8;
        ServerBothPartiesReadyForCall serverBothPartiesReadyForCall = 9;
        ServerKeepAlivePong serverKeepAlivePong = 10;
    }
}